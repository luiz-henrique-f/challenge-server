version: '2'

networks:
  app-tier:
    driver: bridge

services:
  app:
    build: .
    ports:
      - '3000:3000'
    volumes:
      - .:/home/node/app
    depends_on:
      - postgres
      - kafka
      - elasticsearch
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ordersdb
  kafka:
    image: bitnami/kafka:latest
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      - app-tier
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  postgres:
    image: postgres:15
    networks:
      - app-tier
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    ports:
      - '5432:5432'
  elasticsearch:
    image: elasticsearch:8.5.0
    networks:
      - app-tier
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"